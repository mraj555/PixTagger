// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/foundation.dart';

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError('DefaultFirebaseOptions are not supported for this platform.');
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyC6TEuXPSXVXKsb8kyDBHxmGV9L1VBBlQ8',
    appId: '1:924035808645:android:e0309e627d127dd31f58ec',
    messagingSenderId: '924035808645',
    projectId: 'learningprojects-1eee8',
    storageBucket: 'learningprojects-1eee8.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyDP05iK6QsHWu5_2G2xea_-smkfiS6Lt9Q',
    appId: '1:924035808645:ios:6cfcbede81d465f51f58ec',
    messagingSenderId: '924035808645',
    projectId: 'learningprojects-1eee8',
    storageBucket: 'learningprojects-1eee8.firebasestorage.app',
    iosBundleId: 'com.devtestify.pixtagger.pixtagger',
  );
}
